# Makevars file for R package MagmaEigenNonsym
# Compile package using: R CMD INSTALL --preclean --build MagmaEigenNonsym -l ~/R/library
# Where ~/R/library is a local R library
#
# This library uses a client-server architecture to overcome the limitation of R using 32 bit integers
# and the requirement of MAGMA to use 64 bit integers for large matrix eigenvector decompositions.
# The client is the R package and the server is a separate executable that is 
# linked to libmagma.[so|dll] 
# The client and server communicate through POSIX shared memory functions and using semaphores.
# The client package has functions to compile the server executable and the user must provide
# the MAGMA library compiled with MAGMA_ILP64 flag set and have MAGMA_HOME set to the installation
# path of the MAGMA library. The MAGMA library path may need to be available through LD_LIBRARY_PATH 
#
# For multi-GPU functions, set $MAGMA_NUM_GPUS to set the number of GPUs to use.
# For multi-core BLAS libraries, set $OMP_NUM_THREADS or $MKL_NUM_THREADS or
# $VECLIB_MAXIMUM_THREADS to set the number of CPU threads, depending on your
# BLAS library.



############## THIS WORKS FOR SMALLER MATRIX SIZES: ###########################
# PKG_CXXFLAGS= -D_MAGMA_WITH_GPUS=1 -DADD_ -DMAGMA_WITH_MKL -qopenmp -fpic  -I$(MAGMA_HOME)/include -I$(MAGMA_HOME)/control -DHAVE_CUBLAS -I$(CUDA_HOME)/include    
# This is the dynamic MAGMA library:
# PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"`  -fPIC -qopenmp -Wl,-rpath,$(MAGMA_HOME)/lib/lp64:$(INTEL_MKL_HOME)/lib/intel64 -L$(MAGMA_HOME)/lib/lp64 -L$(CUDA_HOME)/lib64 -lpthread -lmagma -lcudart -lcublas -lcuda -lstdc++ -lm 
##################################################################################

PKG_CPPFLAGS= -D_USE_RCPP=1
PKG_CXXFLAGS=  -I../inst/include -qopenmp 
PKG_LIBS = `$(R_HOME)/bin/Rscript -e "Rcpp:::LdFlags()"` $(LAPACK_LIBS)  $(BLAS_LIBS) $(FLIBS) 
#  -DADD_  $(FLIBS) $(BLAS_LIBS) $(LAPACK_LIBS)


## As an alternative, one can also add this code in a file 'configure'
##
##    PKG_LIBS=`${R_HOME}/bin/Rscript -e "Rcpp:::LdFlags()"`
## 
##    sed -e "s|@PKG_LIBS@|${PKG_LIBS}|" \
##        src/Makevars.in > src/Makevars
## 
## which together with the following file 'src/Makevars.in'
##
##    PKG_LIBS = @PKG_LIBS@
##
## can be used to create src/Makevars dynamically. This scheme is more
## powerful and can be expanded to also check for and link with other
## libraries.  It should be complemented by a file 'cleanup'
##
##    rm src/Makevars
##
## which removes the autogenerated file src/Makevars. 
##
## Of course, autoconf can also be used to write configure files. This is
## done by a number of packages, but recommended only for more advanced users
## comfortable with autoconf and its related tools.


